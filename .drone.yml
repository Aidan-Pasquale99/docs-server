---
kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    restore: true
  environment:
    CACHE_S3_ACCESS_KEY:
      from_secret: cache_s3_access_key
    CACHE_S3_ENDPOINT:
      from_secret: cache_s3_endpoint
    CACHE_S3_SECRET_KEY:
      from_secret: cache_s3_secret_key

- name: docs-deps
  pull: always
  image: owncloudci/nodejs:11
  commands:
  - yarn install

- name: docs-validate
  pull: always
  image: owncloudci/nodejs:11
  commands:
  - yarn validate --pull

- name: docs-build
  pull: always
  image: owncloudci/nodejs:11
  commands:
  - yarn antora --pull --attribute format=html
  environment:
    ELASTICSEARCH_HOST:
      from_secret: elasticsearch_host
    ELASTICSEARCH_INDEX:
      from_secret: elasticsearch_index
    ELASTICSEARCH_PORT:
      from_secret: elasticsearch_port
    ELASTICSEARCH_PROTO:
      from_secret: elasticsearch_proto
    ELASTICSEARCH_READ_AUTH:
      from_secret: elasticsearch_read_auth
    ELASTICSEARCH_WRITE_AUTH:
      from_secret: elasticsearch_write_auth
    latestVersion: 10.4

- name: docs-pdf
  pull: always
  image: owncloudci/asciidoctor:latest
  commands:
  - bin/cli -m

- name: cache-rebuild
  pull: always
  image: plugins/s3-cache:1
  settings:
    mount:
    - node_modules
    rebuild: true
  environment:
    CACHE_S3_ACCESS_KEY:
      from_secret: cache_s3_access_key
    CACHE_S3_ENDPOINT:
      from_secret: cache_s3_endpoint
    CACHE_S3_SECRET_KEY:
      from_secret: cache_s3_secret_key
  when:
    event:
    - push

- name: cache-flush
  pull: always
  image: plugins/s3-cache:1
  settings:
    flush: true
    flush_age: 14
  environment:
    CACHE_S3_ACCESS_KEY:
      from_secret: cache_s3_access_key
    CACHE_S3_ENDPOINT:
      from_secret: cache_s3_endpoint
    CACHE_S3_SECRET_KEY:
      from_secret: cache_s3_secret_key
  when:
    event:
    - push

- name: upload-pdf
  pull: always
  image: plugins/s3-sync:1
  settings:
    bucket: uploads
    endpoint: https://doc.owncloud.com
    path_style: true
    source: build/
    target: /deploy
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: aws_access_key_id
    AWS_SECRET_ACCESS_KEY:
      from_secret: aws_secret_access_key
  when:
    event:
    - push

- name: upload-html
  pull: always
  image: plugins/s3-sync:1
  settings:
    bucket: uploads
    endpoint: https://doc.owncloud.com
    path_style: true
    source: public/
    target: /deploy
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: aws_access_key_id
    AWS_SECRET_ACCESS_KEY:
      from_secret: aws_secret_access_key
  when:
    event:
    - push

- name: notify-slack
  pull: if-not-exists
  image: plugins/slack
  settings:
    channel: documentation
  environment:
    SLACK_WEBHOOK:
      from_secret: slack_webhook
  when:
    event:
    - push
    status:
    - failure
    - changed

trigger:
  ref:
  - refs/tags/**
  - refs/pull/**
  - refs/pull-requests/**
  - refs/merge-requests/**
  - refs/heads/master

...
